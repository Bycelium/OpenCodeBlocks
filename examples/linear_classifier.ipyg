{
    "id": 2034509196736,
    "blocks": [
        {
            "id": 2034509423808,
            "title": "Imports",
            "block_type": "OCBCodeBlock",
            "splitter_pos": [
                227,
                0
            ],
            "position": [
                -837.0,
                -95.0
            ],
            "width": 501,
            "height": 286,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034509424672,
                    "type": "input",
                    "position": [
                        0.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034509424816,
                    "type": "output",
                    "position": [
                        501.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "from matplotlib import pyplot as plt\r\nfrom sklearn import linear_model\r\nfrom random import seed, random",
            "stdout": ""
        },
        {
            "id": 2034638878464,
            "title": "",
            "block_type": "OCBMarkdownBlock",
            "splitter_pos": [
                0,
                194
            ],
            "position": [
                -940.0,
                -467.0
            ],
            "width": 677,
            "height": 253,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [],
            "text": "# Linear regressions\r\n\r\nThe example showcases how a graph notebook can be used to teach\r\nhow linear regressions work."
        },
        {
            "id": 2034686482320,
            "title": "Show the data",
            "block_type": "OCBCodeBlock",
            "splitter_pos": [
                0,
                403
            ],
            "position": [
                757.0,
                106.0
            ],
            "width": 663,
            "height": 462,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034686483184,
                    "type": "input",
                    "position": [
                        0.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034686483328,
                    "type": "output",
                    "position": [
                        663.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "um = 10 * m\r\nub = 2 * b\r\nuy = [um*i+ub for i in x]\r\n\r\nplt.plot(x,uy)\r\nplt.scatter(x,y)",
            "stdout": "<img>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\n"
        },
        {
            "id": 2034723533728,
            "title": "Generate some data to plot",
            "block_type": "OCBCodeBlock",
            "splitter_pos": [
                275,
                0
            ],
            "position": [
                -211.0,
                -101.0
            ],
            "width": 641,
            "height": 334,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034723534592,
                    "type": "input",
                    "position": [
                        0.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034723534736,
                    "type": "output",
                    "position": [
                        641.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "seed(132)\r\nx = [3 + random() * 10 for i in range(40)]\r\ny = [4.15 * i + random() * 2 for i in x]",
            "stdout": ""
        },
        {
            "id": 2034723677808,
            "title": "Slider",
            "block_type": "OCBSliderBlock",
            "splitter_pos": [],
            "position": [
                -175.0,
                296.0
            ],
            "width": 618,
            "height": 184,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034723678672,
                    "type": "input",
                    "position": [
                        0.0,
                        50.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034723678816,
                    "type": "output",
                    "position": [
                        618.0,
                        50.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "b = 0.12",
            "value": "0.12",
            "var_name": "b"
        },
        {
            "id": 2034723714816,
            "title": "Slider",
            "block_type": "OCBSliderBlock",
            "splitter_pos": [],
            "position": [
                -184.0,
                550.0
            ],
            "width": 618,
            "height": 184,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034723715680,
                    "type": "input",
                    "position": [
                        0.0,
                        50.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034723715824,
                    "type": "output",
                    "position": [
                        618.0,
                        50.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "m = 0.12",
            "value": "0.12",
            "var_name": "m"
        },
        {
            "id": 2034879162976,
            "title": "Regression",
            "block_type": "OCBCodeBlock",
            "splitter_pos": [
                0,
                349
            ],
            "position": [
                784.0,
                -676.0
            ],
            "width": 615,
            "height": 408,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034879163840,
                    "type": "input",
                    "position": [
                        0.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034879163984,
                    "type": "output",
                    "position": [
                        615.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "my = reg.predict([[i] for i in x])\r\nprint(my)\r\nplt.plot(x,my)\r\nplt.scatter(x,y)",
            "stdout": "<img>\n"
        },
        {
            "id": 2034879286288,
            "title": "Show user input",
            "block_type": "OCBCodeBlock",
            "splitter_pos": [
                0,
                214
            ],
            "position": [
                757.0,
                619.0
            ],
            "width": 685,
            "height": 273,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034879287152,
                    "type": "input",
                    "position": [
                        0.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034879197248,
                    "type": "output",
                    "position": [
                        685.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "print(\"Your manual regression: \")\r\nprint(f\"y = x * {um} + {ub}\")\r\n\r\nprint(\"Accuracy:\")\r\nu = sum([(y[i] - (x[i]*um+ub)) ** 2 for i in range(len(x))])\r\ny_mean = sum(y) / len(y)\r\nv = sum([(y_i - y_mean) ** 2 for y_i in y])\r\nprint(1 - u/v)\r\n",
            "stdout": "Your manual regression: \ny = x * 0.8999999999999999 + 0.24\nAccuracy:\n-6.737344734867353\n"
        },
        {
            "id": 2034886210608,
            "title": "Create a new linear model",
            "block_type": "OCBCodeBlock",
            "splitter_pos": [
                335,
                0
            ],
            "position": [
                10.0,
                -562.0
            ],
            "width": 656,
            "height": 394,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2034886211472,
                    "type": "input",
                    "position": [
                        0.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2034886211616,
                    "type": "output",
                    "position": [
                        656.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "reg = linear_model.LinearRegression()\r\nreg.fit([[i] for i in x],y)",
            "stdout": "LinearRegression()"
        },
        {
            "id": 2136886539168,
            "title": "Show user input",
            "block_type": "OCBCodeBlock",
            "splitter_pos": [
                0,
                224
            ],
            "position": [
                800.0,
                -219.0
            ],
            "width": 670,
            "height": 283,
            "metadata": {
                "title_metadata": {
                    "color": "white",
                    "font": "Ubuntu",
                    "size": 10
                }
            },
            "sockets": [
                {
                    "id": 2136886540752,
                    "type": "input",
                    "position": [
                        0.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                },
                {
                    "id": 2136886540896,
                    "type": "output",
                    "position": [
                        670.0,
                        53.0
                    ],
                    "metadata": {
                        "color": "#FF55FFF0",
                        "linecolor": "#FF000000",
                        "linewidth": 1.0,
                        "radius": 10.0
                    }
                }
            ],
            "source": "print(\"Automatic regression: \")\r\nprint(f\"y = x * {reg.coef_[0]} + {reg.predict([[0]])[0]}\")\r\n\r\nprint(\"Accuracy: (closer to 1 = better)\")\r\nprint(reg.score([[i] for i in x],y))",
            "stdout": "Automatic regression: \ny = x * 4.171128552280276 + 0.8246691322815138\nAccuracy: (closer to 1 = better)\n0.9977264063505547\n"
        }
    ],
    "edges": [
        {
            "id": 2034686480592,
            "path_type": "bezier",
            "source": {
                "block": 2034509423808,
                "socket": 2034509424816
            },
            "destination": {
                "block": 2034723533728,
                "socket": 2034723534592
            }
        },
        {
            "id": 2034686599952,
            "path_type": "bezier",
            "source": {
                "block": 2034723533728,
                "socket": 2034723534736
            },
            "destination": {
                "block": 2034686482320,
                "socket": 2034686483184
            }
        },
        {
            "id": 2034879160672,
            "path_type": "bezier",
            "source": {
                "block": 2034723714816,
                "socket": 2034723715824
            },
            "destination": {
                "block": 2034686482320,
                "socket": 2034686483184
            }
        },
        {
            "id": 2034879161104,
            "path_type": "bezier",
            "source": {
                "block": 2034723677808,
                "socket": 2034723678816
            },
            "destination": {
                "block": 2034686482320,
                "socket": 2034686483184
            }
        },
        {
            "id": 2034882738640,
            "path_type": "bezier",
            "source": {
                "block": 2034723533728,
                "socket": 2034723534736
            },
            "destination": {
                "block": 2034886210608,
                "socket": 2034886211472
            }
        },
        {
            "id": 2034882739360,
            "path_type": "bezier",
            "source": {
                "block": 2034886210608,
                "socket": 2034886211616
            },
            "destination": {
                "block": 2034879162976,
                "socket": 2034879163840
            }
        },
        {
            "id": 2034884170944,
            "path_type": "bezier",
            "source": {
                "block": 2034686482320,
                "socket": 2034686483328
            },
            "destination": {
                "block": 2034879286288,
                "socket": 2034879287152
            }
        },
        {
            "id": 2136887093136,
            "path_type": "bezier",
            "source": {
                "block": 2034886210608,
                "socket": 2034886211616
            },
            "destination": {
                "block": 2136886539168,
                "socket": 2136886540752
            }
        }
    ]
}